version: '3.7'

x-common-labels: &common_labels
  org.wwhw.deploy.settings.defaults.namespace: mylocal
  org.wwhw.deploy.settings.defaults.env: dev
  org.wwhw.deploy.settings.defaults.tld: mylocal.ru

x-traefik-common-middlewares: &traefik_common_middlewares
  traefik.http.middlewares.basic-auth.basicauth.users: "usertest:$$apr1$$Ac3YPkhw$$OJD0MKpfw9nSqlm.nr7FO/"
  traefik.http.middlewares.basic-auth.basicauth.removeHeader: 'true'
  traefik.http.middlewares.compress-response.compress: 'true'
  traefik.http.middlewares.detect-content-type.contentType.autoDetect: 'true'
  traefik.http.middlewares.add-security-headers.headers.framedeny: 'true'
  traefik.http.middlewares.add-security-headers.headers.stsSeconds: 315360000
  traefik.http.middlewares.add-security-headers.headers.stsIncludeSubdomains: 'true'
  traefik.http.middlewares.add-security-headers.headers.stsPreload: 'true'
  traefik.http.middlewares.add-security-headers.headers.forceSTSHeader: 'true'
  traefik.http.middlewares.add-security-headers.headers.sslRedirect: 'true'

services:
  traefik:
    image: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - acme:/letsencrypt
    networks:
      - traefik_endpoint
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    #logging:
    #  driver: gelf
    #  options:
    #    gelf-address: udp://graylog.wwhw.org:12201
    #    gelf-compression-type: none
    #    mode: non-blocking
    #    max-buffer-size: 64m
    command:
      - '--global.sendanonymoususage=true'
      - '--global.checknewversion=false'
      - '--api=true'
      - '--ping=true'
      - '--log.level=INFO'
      - '--accesslog=true'
      - '--accesslog.format=json'
      - '--accesslog.fields.defaultmode=keep'
      - '--accesslog.fields.names.ServiceURL=drop'
      - '--accesslog.fields.names.StartLocal=drop'
      - '--accesslog.fields.headers.defaultmode=drop'
      - '--accesslog.fields.headers.names.Content-Length=keep'
      - '--accesslog.fields.headers.names.Content-Type=keep'
      - '--accesslog.fields.headers.names.User-Agent=keep'
      - '--accesslog.fields.headers.names.X-Powered-By=keep'
      - '--accesslog.fields.headers.names.X-Forwarded-For=keep'
      - '--accesslog.fields.headers.names.X-Forwarded-Server=keep'
      - '--accesslog.bufferingsize=2048'
      - '--metrics.prometheus=true'
      - '--metrics.prometheus.buckets=0.500000,0.750000,1.000000,2.000000,3.000000,4.000000'
      - '--metrics.prometheus.addEntryPointsLabels=true'
      - '--metrics.prometheus.addServicesLabels=true'
      - '--metrics.prometheus.entryPoint=metrics'
      - '--providers.docker=true'
      - '--providers.docker.watch=true'
      - '--providers.docker.exposedbydefault=false'
      - '--providers.docker.endpoint=unix:///var/run/docker.sock'
      - '--providers.docker.swarmMode=true'
      - '--providers.docker.swarmModeRefreshSeconds=16'
      - '--providers.docker.network=traefik_endpoint'
      - '--entryPoints.http.address=:80'
      - '--entryPoints.https.address=:443'
      - '--entryPoints.https.forwardedHeaders.insecure=true'
      # - '--entryPoints.http.redirect=https'
      #- '--entryPoints.metrics.address=:9191'
      #- '--certificatesResolvers.letsenc.acme.httpchallenge=true'
      #- '--certificatesResolvers.letsenc.acme.httpchallenge.entrypoint=http'
      #- '--certificatesResolvers.letsenc.acme.email=ssl@mylocal.ru'
      #- '--certificatesResolvers.letsenc.acme.storage=/letsencrypt/acme.json'
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 5s
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
      labels:
        <<: *common_labels
        <<: *traefik_common_middlewares
        traefik.enable: 'true'
        traefik.http.routers.api.rule: Host(`traefik.${DOMAIN_NAME}`)
        traefik.http.routers.api.service: api@internal
        traefik.http.routers.api.middlewares: basic-auth, add-security-headers, compress-response
        traefik.http.routers.api.tls: 'true'
        traefik.http.routers.api.entrypoints: https
        #traefik.http.routers.api.tls.certresolver: letsenc
        traefik.http.services.api.loadbalancer.server.port: 9999
        traefik.http.routers.http_catchall.rule: HostRegexp(`{any:.+}`)
        traefik.http.routers.http_catchall.entrypoints: http
        traefik.http.routers.http_catchall.middlewares: https_redirect
        traefik.http.middlewares.https_redirect.redirectscheme.scheme: https
        traefik.http.middlewares.https_redirect.redirectscheme.permanent: 'true'
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 6s
      timeout: 2s
      retries: 3

networks:
  traefik_endpoint:
    external: true
  monitoring_endpoint:
    external: true

volumes:
  acme:
